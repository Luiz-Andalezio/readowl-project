generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para papéis de usuário
enum Role {
  USER
  ADMIN
}

// Modelo de Usuário
model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  password      String?  // Nullable: será null para contas Google
  image         String?  // URL da imagem de perfil
  description   String?
  role          Role     @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relacionamentos futuros (exemplo)
  // books         Book[]   @relation("UserBooks")
  // followedBooks Book[]   @relation("BookFollowers")

  // Campos para NextAuth
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
}

// Modelos auxiliares para NextAuth
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}